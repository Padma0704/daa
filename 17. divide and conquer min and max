#include <stdio.h>
#include <limits.h>

// Structure to hold the result of min and max
typedef struct {
    int min;
    int max;
} MinMax;

// Function to find min and max in a list using divide and conquer
MinMax findMinMax(int arr[], int low, int high) {
    MinMax result, leftResult, rightResult;
    
    // If there is only one element
    if (low == high) {
        result.min = arr[low];
        result.max = arr[low];
        return result;
    }

    // If there are two elements
    if (high == low + 1) {
        if (arr[low] < arr[high]) {
            result.min = arr[low];
            result.max = arr[high];
        } else {
            result.min = arr[high];
            result.max = arr[low];
        }
        return result;
    }

    // If there are more than two elements
    int mid = low + (high - low) / 2;
    leftResult = findMinMax(arr, low, mid);
    rightResult = findMinMax(arr, mid + 1, high);

    // Combine results
    if (leftResult.min < rightResult.min) {
        result.min = leftResult.min;
    } else {
        result.min = rightResult.min;
    }

    if (leftResult.max > rightResult.max) {
        result.max = leftResult.max;
    } else {
        result.max = rightResult.max;
    }

    return result;
}

int main() {
    int arr[] = {3, 5, 1, 8, -2, 7, 4, 10, 6};
    int n = sizeof(arr) / sizeof(arr[0]);

    MinMax result = findMinMax(arr, 0, n - 1);

    printf("Minimum value in the array is: %d\n", result.min);
    printf("Maximum value in the array is: %d\n", result.max);

    return 0;
}

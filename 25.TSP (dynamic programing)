#include <stdio.h>
#include <limits.h>

#define MAX 20
#define INF INT_MAX

int dist[MAX][MAX]; // Distance matrix
int n; // Number of cities

// Function to find the minimum of two numbers
int min(int a, int b) {
    return (a < b) ? a : b;
}

// Function to solve TSP using dynamic programming
int tsp(int mask, int pos, int dp[MAX][MAX]) {
    if (mask == (1 << n) - 1) {
        return dist[pos][0]; // Return to the starting point
    }

    if (dp[mask][pos] != -1) {
        return dp[mask][pos];
    }

    int ans = INF;

    for (int city = 0; city < n; city++) {
        if ((mask & (1 << city)) == 0) { // If the city is not visited
            int newAns = dist[pos][city] + tsp(mask | (1 << city), city, dp);
            ans = min(ans, newAns);
        }
    }

    return dp[mask][pos] = ans;
}

int main() {
    printf("Enter the number of cities: ");
    scanf("%d", &n);

    printf("Enter the distance matrix (%d x %d):\n", n, n);
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &dist[i][j]);
        }
    }

    int dp[MAX][MAX];
    for (int i = 0; i < (1 << n); i++) {
        for (int j = 0; j < n; j++) {
            dp[i][j] = -1;
        }
    }

    int result = tsp(1, 0, dp);
    printf("The minimum cost of the tour is: %d\n", result);

    return 0;
}

#include <stdio.h>
#include <limits.h>

#define N 4 // Number of agents/tasks

// Function to find the minimum cost using Branch and Bound
void findMinCost(int cost[N][N], int assignment[], int *minCost, int level, int currentCost, int assigned[]) {
    if (level == N) {
        if (currentCost < *minCost) {
            *minCost = currentCost;
        }
        return;
    }

    for (int i = 0; i < N; i++) {
        if (!assigned[i]) {
            assigned[i] = 1;
            assignment[level] = i;

            findMinCost(cost, assignment, minCost, level + 1, currentCost + cost[level][i], assigned);

            assigned[i] = 0;
        }
    }
}

int main() {
    // Cost matrix
    int cost[N][N] = {
        {9, 2, 7, 8},
        {6, 4, 3, 7},
        {5, 8, 1, 8},
        {7, 6, 9, 4}
    };

    int assignment[N];   // To store the assignment of tasks
    int assigned[N] = {0}; // To keep track of assigned tasks
    int minCost = INT_MAX; // Initialize minimum cost to maximum integer value

    findMinCost(cost, assignment, &minCost, 0, 0, assigned);

    printf("The minimum cost is: %d\n", minCost);
    printf("The assignment is:\n");
    for (int i = 0; i < N; i++) {
        printf("Task %d assigned to Agent %d\n", i + 1, assignment[i] + 1);
    }

    return 0;
}
